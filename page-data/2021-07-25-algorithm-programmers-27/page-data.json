{"componentChunkName":"component---src-templates-post-jsx","path":"/2021-07-25-algorithm-programmers-27/","result":{"data":{"site":{"siteMetadata":{"title":"수학하는 개발자"}},"markdownRemark":{"id":"194bc5e0-6056-5172-a318-cae736c6aa3a","excerpt":"문제 링크\nhttps://programmers.co.kr/learn/courses/30/lessons/70129 문제 설명 0과 1로 이루어진 어떤 문자열 x에 대한 이진 변환을 다음과 같이 정의합니다. x의 모든 0을 제거합니다.\nx의 길이를 c라고 하면, x를 \"c를 2진법으로 표현한 문자열\"로 바꿉니다.\n예를 들어, 이라면, x에 이진 변환을 가하면…","html":"<blockquote>\n<p>문제 링크\n<a href=\"https://programmers.co.kr/learn/courses/30/lessons/70129\">https://programmers.co.kr/learn/courses/30/lessons/70129</a></p>\n</blockquote>\n<h3>문제 설명</h3>\n<p>0과 1로 이루어진 어떤 문자열 x에 대한 이진 변환을 다음과 같이 정의합니다.</p>\n<p>x의 모든 0을 제거합니다.\nx의 길이를 c라고 하면, x를 \"c를 2진법으로 표현한 문자열\"로 바꿉니다.\n예를 들어, <code class=\"language-text\">x = \"0111010\"</code>이라면, x에 이진 변환을 가하면 <code class=\"language-text\">x = \"0111010\" -> \"1111\" -> \"100\"</code> 이 됩니다.</p>\n<p>0과 1로 이루어진 문자열 s가 매개변수로 주어집니다. s가 \"1\"이 될 때까지 계속해서 s에 이진 변환을 가했을 때, 이진 변환의 횟수와 변환 과정에서 제거된 모든 0의 개수를 각각 배열에 담아 return 하도록 solution 함수를 완성해주세요.</p>\n<h3>제한사항</h3>\n<ul>\n<li>s의 길이는 1 이상 150,000 이하입니다.</li>\n<li>s에는 '1'이 최소 하나 이상 포함되어 있습니다.</li>\n</ul>\n<h3>입출력 예</h3>\n<table>\n<thead>\n<tr>\n<th>s</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\"110010101001\"</td>\n<td>[3,8]</td>\n</tr>\n<tr>\n<td>\"01110\"</td>\n<td>[3,3]</td>\n</tr>\n<tr>\n<td>\"1111111\"</td>\n<td>[4,1]</td>\n</tr>\n</tbody>\n</table>\n<h4>입출력 예 #1</h4>\n<ul>\n<li>\"110010101001\"이 \"1\"이 될 때까지 이진 변환을 가하는 과정은 다음과 같습니다.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>회차</th>\n<th>이진 변환 이전</th>\n<th>제거할 0의 개수</th>\n<th>0 제거 후 길이</th>\n<th>이진 변환 결과</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>\"110010101001\"</td>\n<td>6</td>\n<td>6</td>\n<td>\"110\"</td>\n</tr>\n<tr>\n<td>2</td>\n<td>\"110\"</td>\n<td>1</td>\n<td>2</td>\n<td>\"10\"</td>\n</tr>\n<tr>\n<td>3</td>\n<td>\"10\"</td>\n<td>1</td>\n<td>1</td>\n<td>\"1\"</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>3번의 이진 변환을 하는 동안 8개의 0을 제거했으므로, <code class=\"language-text\">[3,8]</code>을 return 해야 합니다.</li>\n</ul>\n<h4>입출력 예 #2</h4>\n<ul>\n<li>\"01110\"이 \"1\"이 될 때까지 이진 변환을 가하는 과정은 다음과 같습니다.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>회차</th>\n<th>이진 변환 이전</th>\n<th>제거할 0의 개수</th>\n<th>0 제거 후 길이</th>\n<th>이진 변환 결과</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>\"01110\"</td>\n<td>2</td>\n<td>3</td>\n<td>\"11\"</td>\n</tr>\n<tr>\n<td>2</td>\n<td>\"11\"</td>\n<td>0</td>\n<td>2</td>\n<td>\"10\"</td>\n</tr>\n<tr>\n<td>3</td>\n<td>\"10\"</td>\n<td>1</td>\n<td>1</td>\n<td>\"1\"</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>3번의 이진 변환을 하는 동안 3개의 0을 제거했으므로, [3,3]을 return 해야 합니다.</li>\n</ul>\n<h4>입출력 예 #3</h4>\n<ul>\n<li>\"1111111\"이 \"1\"이 될 때까지 이진 변환을 가하는 과정은 다음과 같습니다.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>회차</th>\n<th>이진 변환 이전</th>\n<th>제거할 0의 개수</th>\n<th>0 제거 후 길이</th>\n<th>이진 변환 결과</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>\"1111111\"</td>\n<td>0</td>\n<td>7</td>\n<td>\"111\"</td>\n</tr>\n<tr>\n<td>2</td>\n<td>\"111\"</td>\n<td>0</td>\n<td>3</td>\n<td>\"11\"</td>\n</tr>\n<tr>\n<td>3</td>\n<td>\"11\"</td>\n<td>0</td>\n<td>2</td>\n<td>\"10\"</td>\n</tr>\n<tr>\n<td>4</td>\n<td>\"10\"</td>\n<td>1</td>\n<td>1</td>\n<td>\"1\"</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>4번의 이진 변환을 하는 동안 1개의 0을 제거했으므로, [4,1]을 return 해야 합니다.</li>\n</ul>\n<h3>내 풀이</h3>\n<p>문제에서 진행되는 순서대로 구현하면 된다. s에서 1의 개수를 세서, 그 개수를 이진수로 변환하면 된다.</p>\n<p>나는 이진수로 변환하는 과정을 직접 구현했는데, 다른 사람의 풀이를 보니 <code class=\"language-text\">Integer.toBinaryString(n);</code>을 사용해 간단하게 이진수로 변환했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> answer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> countZero <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token char\">'1'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    n<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            countZero <span class=\"token operator\">+=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> n<span class=\"token punctuation\">;</span>\n            \n            <span class=\"token class-name\">String</span> binary <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                binary <span class=\"token operator\">+=</span> n <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n                n <span class=\"token operator\">/=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            s <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span>binary<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">>=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                s <span class=\"token operator\">+=</span> binary<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        answer<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span>\n        answer<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> countZero<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"[프로그래머스] 이진 변환 반복하기","date":"July 25, 2021","update":"July 25, 2021","tags":["Algorithm","Programmers"],"series":null},"fields":{"slug":"/2021-07-25-algorithm-programmers-27/","readingTime":{"minutes":3.61}}},"seriesList":{"edges":[{"node":{"id":"acabd04c-92ae-5538-9eda-fbd68fa87c9c","fields":{"slug":"/2020-07-23-github-blog-theme/"},"frontmatter":{"title":"blog 테마 바꾸기"}}},{"node":{"id":"1954ad40-36c7-5e67-98e1-595777294f85","fields":{"slug":"/2020-07-23-java-stack-class/"},"frontmatter":{"title":"Java - Stack 클래스"}}},{"node":{"id":"ad32dcd2-82c4-5a1c-b79a-a245ebc8e108","fields":{"slug":"/2020-07-23-baekjoon-10828/"},"frontmatter":{"title":"백준 10828 - 스택"}}},{"node":{"id":"4d8da4db-1a95-5a14-a254-11b7f604fa00","fields":{"slug":"/2020-08-04-baekjoon-2164/"},"frontmatter":{"title":"백준 2164 - 카드2"}}},{"node":{"id":"8e506019-dffd-5699-91b5-e0b7bae6b9e9","fields":{"slug":"/2020-08-04-baekjoon-10866/"},"frontmatter":{"title":"백준 10866 - 덱"}}},{"node":{"id":"34d956db-2852-5fdc-beaa-cc591d851745","fields":{"slug":"/2020-08-04-java-deque-class/"},"frontmatter":{"title":"Java - Deque 클래스"}}},{"node":{"id":"246c6841-1aa1-553c-91f3-ffa7ad61c9fb","fields":{"slug":"/2020-08-04-java-queue-class/"},"frontmatter":{"title":"Java - Queue 클래스"}}},{"node":{"id":"955aca9d-f57e-58e2-8b37-81142b4a3ebf","fields":{"slug":"/2020-10-22-java-data-type/"},"frontmatter":{"title":"자바의 기본 자료형 종류와 저장 가능 범위"}}},{"node":{"id":"1c3efb4a-6214-5345-9d04-e8b7298fe741","fields":{"slug":"/2020-10-23-euclidean-algorithm/"},"frontmatter":{"title":"유클리드 호제법(최대공약수 구하기)"}}},{"node":{"id":"db9b7a6e-4fc8-5aab-b9fb-143f6895295a","fields":{"slug":"/2020-10-23-java-stringbuilder/"},"frontmatter":{"title":"Java - StringBuilder"}}},{"node":{"id":"2246c900-3c63-5ffe-9fb4-e40246faf0c6","fields":{"slug":"/2020-10-26-java-interface/"},"frontmatter":{"title":"Java - Interface"}}},{"node":{"id":"dbb25697-0316-5712-b558-82752dbd1e25","fields":{"slug":"/2020-10-27-java-optional/"},"frontmatter":{"title":"Java - Optional"}}},{"node":{"id":"fc0aba60-650a-5df0-8970-2bac6f454a71","fields":{"slug":"/2020-11-26-baekjoon-7576/"},"frontmatter":{"title":"백준 7576 - 토마토"}}},{"node":{"id":"4ea752b1-8a8d-5f05-b43b-980d028a635c","fields":{"slug":"/2020-12-22-thymeleaf-syntax/"},"frontmatter":{"title":"Thymeleaf 문법 정리"}}},{"node":{"id":"7d2577b9-3761-5e26-b133-4a7f9a060fba","fields":{"slug":"/2020-12-23-thymeleaf-fragment/"},"frontmatter":{"title":"Thymeleaf fragment"}}},{"node":{"id":"ae5a9388-053b-53fd-bbfb-f19b2bb2ffef","fields":{"slug":"/2020-12-25-springboot-mysql-jpa/"},"frontmatter":{"title":"Spring Boot JPA, MySQL 연동"}}},{"node":{"id":"9fd56c7a-085f-528a-802a-22b61fe74bb5","fields":{"slug":"/2021-01-21-springboot-validation/"},"frontmatter":{"title":"Spring Boot Validation"}}},{"node":{"id":"3af470a2-7748-5749-a77e-afaef46dca58","fields":{"slug":"/2021-03-11-algorithm-programmers-1/"},"frontmatter":{"title":"[프로그래머스] 완주하지 못한 선수"}}},{"node":{"id":"cca2f4c4-b72f-5662-b29b-f12f560c614b","fields":{"slug":"/2021-04-28-algorithm-programmers-2/"},"frontmatter":{"title":"[프로그래머스] 타겟 넘버"}}},{"node":{"id":"ef2c0006-a175-56de-b03a-3a65e1540a95","fields":{"slug":"/2021-04-30-algorithm-programmers-3/"},"frontmatter":{"title":"[프로그래머스] 네트워크"}}},{"node":{"id":"8084e52f-0425-5330-ace8-d9f5642f83e6","fields":{"slug":"/2021-05-01-algorithm-programmers-4/"},"frontmatter":{"title":"[프로그래머스] 단어 변환"}}},{"node":{"id":"972e51bc-dabc-5248-a41d-5db617cfc86d","fields":{"slug":"/2021-05-03-algorithm-programmers-5/"},"frontmatter":{"title":"[프로그래머스] 여행경로"}}},{"node":{"id":"64c52cc6-ee1e-50fc-adc2-36a3c03bccf2","fields":{"slug":"/2021-05-05-algorithm-programmers-6/"},"frontmatter":{"title":"[프로그래머스] 기능개발"}}},{"node":{"id":"8937358a-2a3d-5c07-8184-cd64240b2c88","fields":{"slug":"/2021-05-06-algorithm-programmers-7/"},"frontmatter":{"title":"[프로그래머스] 프린터"}}},{"node":{"id":"62d81f8e-d421-548b-9280-2de435c030e7","fields":{"slug":"/2021-05-08-algorithm-programmers-8/"},"frontmatter":{"title":"[프로그래머스] 다리를 지나는 트럭"}}},{"node":{"id":"2fde7462-e33f-5da2-abee-2fba66303822","fields":{"slug":"/2021-05-09-algorithm-programmers-9/"},"frontmatter":{"title":"[프로그래머스] 주식 가격"}}},{"node":{"id":"3bd76614-bd81-5f98-82ea-cbbf59e23ee3","fields":{"slug":"/2021-05-11-algorithm-programmers-10/"},"frontmatter":{"title":"[프로그래머스] 전화번호 목록"}}},{"node":{"id":"8c4ec693-695f-58b1-9f80-af294c9f272e","fields":{"slug":"/2021-05-13-algorithm-programmers-11/"},"frontmatter":{"title":"[프로그래머스] 위장"}}},{"node":{"id":"5fe29037-bdfc-5f33-83ef-adb3224cd850","fields":{"slug":"/2021-05-15-algorithm-programmers-12/"},"frontmatter":{"title":"[프로그래머스] 베스트 앨범"}}},{"node":{"id":"4ff75e2c-ba95-5112-be03-5f243b8bba03","fields":{"slug":"/2021-05-16-algorithm-programmers-13/"},"frontmatter":{"title":"[프로그래머스] 더 맵게"}}},{"node":{"id":"230d3627-431e-5365-adf0-ef85bd9b5083","fields":{"slug":"/2021-05-18-algorithm.programmers-14/"},"frontmatter":{"title":"[프로그래머스] 디스크 컨트롤러"}}},{"node":{"id":"c3d545a9-29cb-5f16-8ff0-52d4db3b26a5","fields":{"slug":"/2021-05-19-algorithm-programmers-15/"},"frontmatter":{"title":"[프로그래머스] 이중우선순위큐"}}},{"node":{"id":"8c930bc0-d5c5-5955-8088-3b588786128d","fields":{"slug":"/2021-05-20-algorithm-programmers-16/"},"frontmatter":{"title":"[프로그래머스] K번째수"}}},{"node":{"id":"9878dd11-6c29-510c-890d-dc3e898e40c8","fields":{"slug":"/2021-05-21-algorithm-programmers-17/"},"frontmatter":{"title":"[프로그래머스] 가장 큰 수"}}},{"node":{"id":"e6306a22-5f1e-5d2e-a615-16eca3fc97fe","fields":{"slug":"/2021-05-22-java-collection/"},"frontmatter":{"title":"Java Collection"}}},{"node":{"id":"e90a09af-4ad4-5db9-b4b5-6cb90fb3f47d","fields":{"slug":"/2021-05-23-algorithm-programmers-18/"},"frontmatter":{"title":"[프로그래머스] H-Index"}}},{"node":{"id":"d113e6fb-48c6-5e93-9b18-da0e9b51d025","fields":{"slug":"/2021-05-26-algorithm-programmers-19/"},"frontmatter":{"title":"[프로그래머스] 모의고사"}}},{"node":{"id":"37cacf0d-e0a7-5123-9cd1-99172f54c79d","fields":{"slug":"/2021-05-27-algorithm-programmers-20/"},"frontmatter":{"title":"[프로그래머스] 소수 찾기"}}},{"node":{"id":"4babda6f-2bac-57c4-9d9b-68e291edaa39","fields":{"slug":"/2021-05-28-algorithm-programmers-21/"},"frontmatter":{"title":"[프로그래머스] 카펫"}}},{"node":{"id":"566b96cf-78d2-5cfe-a1c2-914f846491d5","fields":{"slug":"/2021-05-30-algorithm-programmers-22/"},"frontmatter":{"title":"[프로그래머스] 체육복"}}},{"node":{"id":"d5c2c51e-a145-5135-b40e-0ac1c607f814","fields":{"slug":"/2021-06-29-algorithm-programmers-23/"},"frontmatter":{"title":"[프로그래머스] 조이스틱"}}},{"node":{"id":"265c71b9-01f3-5bb0-815e-09e20bd5469f","fields":{"slug":"/2021-07-10-greedy-algorithm/"},"frontmatter":{"title":"Greedy Algorithm"}}},{"node":{"id":"378a5dac-ccf1-5047-a646-85e32ed95624","fields":{"slug":"/2021-07-16-programmers-algorithm-24/"},"frontmatter":{"title":"[프로그래머스] 3진법 뒤집기"}}},{"node":{"id":"42f43055-d949-581c-9be7-bbbd5bcdcaef","fields":{"slug":"/2021-07-18-programmers-algorithm-25/"},"frontmatter":{"title":"[프로그래머스] 두 개 뽑아서 더하기"}}},{"node":{"id":"7610fa46-6f18-5b4e-b46d-383f29a992c4","fields":{"slug":"/2021-07-23-programmers-algorithm-26/"},"frontmatter":{"title":"[프로그래머스] 삼각 달팽이"}}},{"node":{"id":"194bc5e0-6056-5172-a318-cae736c6aa3a","fields":{"slug":"/2021-07-25-algorithm-programmers-27/"},"frontmatter":{"title":"[프로그래머스] 이진 변환 반복하기"}}},{"node":{"id":"328a8442-4b76-56e6-8e3e-2b53052a49a3","fields":{"slug":"/2021-07-25-algorithm-programmers-28/"},"frontmatter":{"title":"[프로그래머스] 쿼드 압축 후 개수 세기"}}},{"node":{"id":"c23c4e02-565f-59ec-af74-ab0401c19534","fields":{"slug":"/2021-12-07-algorithm-programmers-30/"},"frontmatter":{"title":"[프로그래머스] 소수 만들기"}}},{"node":{"id":"a4f5a9af-f76a-52d9-aafa-456c06b31eea","fields":{"slug":"/2021-12-09-algorithm-programmers-31/"},"frontmatter":{"title":"[프로그래머스] 예산"}}},{"node":{"id":"e7c98424-ebb9-5e30-bc04-7216b27789a5","fields":{"slug":"/2022-04-03-weekly-report/"},"frontmatter":{"title":"3월 넷째주 주간 회고"}}}]},"previous":{"fields":{"slug":"/2021-07-23-programmers-algorithm-26/"},"frontmatter":{"title":"[프로그래머스] 삼각 달팽이"}},"next":{"fields":{"slug":"/2021-07-25-algorithm-programmers-28/"},"frontmatter":{"title":"[프로그래머스] 쿼드 압축 후 개수 세기"}}},"pageContext":{"id":"194bc5e0-6056-5172-a318-cae736c6aa3a","series":null,"previousPostId":"7610fa46-6f18-5b4e-b46d-383f29a992c4","nextPostId":"328a8442-4b76-56e6-8e3e-2b53052a49a3"}},"staticQueryHashes":[]}